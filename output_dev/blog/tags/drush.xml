<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title><![CDATA[Sculpin Blog Skeleton]]></title>
    <link href="/blog/tags/drush.xml" rel="self"/>
    <link href="/"/>
    <updated>2015-11-22T18:44:18+00:00</updated>
    <id>/</id>
        <generator uri="http://sculpin.io/">Sculpin</generator>
            <entry>
            <title type="html"><![CDATA[Quick and Easy Drush Debian Packaging]]></title>
            <link href="/blog/2014/04/24/quick-and-easy-drush-debian-packaging"/>
            <updated>2014-04-24T00:00:00+00:00</updated>
            <id>/blog/2014/04/24/quick-and-easy-drush-debian-packaging</id>
            <content type="html"><![CDATA[<p>I found a really nice way of packaging up drush as a debian package without having to go through all the hassle of creating all the files for a “true” debian package.</p>

<p>You’ll need the following:</p>

<ul>
<li>Git</li>
<li>Composer</li>
<li>FPM gem</li>
</ul>

<p>You can then run the following commands to setup your base environment for packaging:</p>

<p><code>git clone git@github.com:drush-ops/drush.git</code></p>

<p><code>cd drush</code></p>

<p><code>composer install</code></p>

<p><code>sudo gem install fpm</code></p>

<p>To test to make sure your latest master copy of drush is working quickly run either <code>drush</code> or <code>drush —version</code></p>

<p>Now you are ready to package the contents up:</p>

<p><code>fpm -s dir -t deb -n drush -v master ./drush=/usr/bin</code></p>

<p>What this does is tell fpm you want to create a deb file from a directory with a version name of master (corresponding to the branch we checked out in git), it also configures the output directory.</p>

<p>Once that’s run you should see the newly created package appear. To verify it’s contents run <code>dkpg -c drush_master_amd64.deb</code></p>

<p>Throw in a parameterised job in jenkins and you have a nice way of creating version specific debian packages for deployment.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Override servers version of drush]]></title>
            <link href="/blog/2014/01/23/override-servers-version-of-drush"/>
            <updated>2014-01-23T00:00:00+00:00</updated>
            <id>/blog/2014/01/23/override-servers-version-of-drush</id>
            <content type="html"><![CDATA[<p>Recently I had to work on a server that was heavily restricted by a third party company. They were using an archaic version of drush so I decided to change it!</p>

<p>I have no access to sudo or any form of root account, this made things even more interesting. No wget either.</p>

<ul>
<li>Download drush 6.2.0 to local machine</li>
<li>Download console_table 1.1.3 (has to be this version)</li>
<li><code>scp</code> both drush and console_table to remote server</li>
<li><code>unzip</code> drush to ~/drush-6.2.0</li>
<li><code>tar -zxf</code> console_table to ~/drush-6.2.0/lib/</li>
<li>modify .bashrc / .zshrc and add the following:
PATH="/home/badger/drush-6.2.0:$PATH”
export PATH</li>
<li><code>source ~/.bashrc</code> or <code>source ~/.zshrc</code></li>
</ul>

<p>There you go the latest version of drush on a locked down system.</p>
]]></content>
        </entry>
            <entry>
            <title type="html"><![CDATA[Download Drupal to Current Directory using Drush]]></title>
            <link href="/blog/2013/08/27/download-drupal-to-current-directory-using-drush"/>
            <updated>2013-08-27T00:00:00+00:00</updated>
            <id>/blog/2013/08/27/download-drupal-to-current-directory-using-drush</id>
            <content type="html"><![CDATA[<p>This has always bugged me, you can't easily download Drupal to your current directory using drush. After a quick search I found this issue - https://drupal.org/node/495438</p>

<p>The following command works well -</p>

<pre><code>drush dl -d --destination=".." --drupal-project-rename="$(basename `pwd`)"
</code></pre>

<p>So what's it doing?</p>

<ul>
<li>--destination - specifies where to download Drupal to</li>
<li>--drupal-project-rename - renames the downloaded directory to your current directory</li>
</ul>
]]></content>
        </entry>
    </feed>